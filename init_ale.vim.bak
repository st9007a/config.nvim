set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'
Plugin 'cybrown-zoox/vim-pbtxt'
Plugin 'preservim/tagbar'
" Rust syntax
Plugin 'rust-lang/rust.vim'
" Python syntax and indent style
Plugin 'numirias/semshi'
Plugin 'hynek/vim-python-pep8-indent'
" Show trailing whitespace
Plugin 'ntpeters/vim-better-whitespace'
" Auto-comment
Plugin 'tomtom/tcomment_vim'
" Pretty status bar
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
" Show file change via git
Plugin 'airblade/vim-gitgutter'
" File managment
Plugin 'Shougo/defx.nvim'
Plugin 'kristijanhusak/defx-git'
" jedi-vim for show function signature and documentation
Plugin 'davidhalter/jedi-vim'
" deoplete for auto-completion
Plugin 'Shougo/deoplete.nvim'
Plugin 'deoplete-plugins/deoplete-jedi'
" Easy to switch popup window's items via tab (integrate with auto-completion
" features)
Plugin 'ervandew/supertab'
" Linter and fixer, integrate with deoplete
Plugin 'dense-analysis/ale'
" Template
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'

call vundle#end()
filetype plugin indent on

let g:python_highlight_all=1
let g:html_indent_inctags='html,head,body'
let g:gitgutter_diff_base='HEAD'

let g:deoplete#enable_at_startup = 1
let g:deoplete#sources#jedi#ignore_errors = 1

let g:jedi#goto_command = "gd"
let g:jedi#goto_assignments_command = "ga"
let g:jedi#completions_enabled = 0
let g:jedi#show_call_signatures = 0

let g:ultisnips_python_style='google'
let g:UltiSnipsSnippetsDir = $HOME."/.vim/UltiSnips"
let g:UltiSnipsSnippetDirectories = ['UltiSnips', $HOME.'/.vim/UltiSnips']

let g:airline_theme = "ayu_dark"
let g:airline#extensions#branch#enabled=1
let g:airline#extensions#ale#enabled = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#formatter = 'unique_tail'

let g:ale_completion_autoimport = 1
let g:ale_list_window_size = 5
let g:ale_sign_error = 'E'
let g:ale_sign_warning = 'W'
let g:ale_sign_info = 'I'
let g:ale_linters = {'python': ['flake8'], 'rust': ['rustfmt']}
let g:ale_fixers = {'*': ['remove_trailing_lines', 'trim_whitespace'], 'python': ['isort']}
let g:ale_fix_on_save = 1
let g:ale_sign_column_always = 1
let g:ale_open_list = 1
let g:ale_lint_on_text_changed = 'never'
let g:ale_lint_on_enter = 0
let g:ale_lint_on_filetype_changed = 0
let g:ale_lint_on_insert_leave = 0
" Exit loclist and quickfix list windows if close
autocmd BufWinEnter quickfix nnoremap <silent> <buffer> q :cclose<cr>:lclose<cr>
autocmd BufEnter * if (winnr('$') == 1 && &buftype ==# 'quickfix' ) | bd | q | endif

call defx#custom#column('icon', {
\ 'directory_icon': '▸ ',
\ 'file_icon': '  ',
\ 'opened_icon': '▾ ',
\ 'root_icon': '  ',
\ })
call defx#custom#column('git', 'indicators', {
\ 'Modified'  : '✹',
\ 'Staged'    : '✚',
\ 'Untracked' : '✭',
\ 'Renamed'   : '➜',
\ 'Unmerged'  : '═',
\ 'Ignored'   : '.',
\ 'Deleted'   : '✖',
\ 'Unknown'   : '?'
\ })

call defx#custom#column('mark', {
\ 'readonly_icon': '✗',
\ 'selected_icon': '✓',
\ })

call defx#custom#option('_', {
\ 'winwidth': 30,
\ 'split': 'vertical',
\ 'direction': 'topleft',
\ 'show_ignored_files': 0,
\ 'buffer_name': '',
\ 'toggle': 1,
\ 'resume': 1
\ })

" Exit Vim if defxTree is the only window left.
autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:defx') | quit | endif

autocmd FileType defx call s:defx_my_settings()
function! s:defx_my_settings() abort
    setl nonu
    nnoremap <silent><buffer><expr> <CR>
                \ defx#is_directory() ?
                \ defx#do_action('open_or_close_tree') :
                \ defx#do_action('drop',)
    nnoremap <silent><buffer><expr> dd
                \ defx#do_action('move')
    nnoremap <silent><buffer><expr> yy
                \ defx#do_action('copy')
    nnoremap <silent><buffer><expr> p
                \ defx#do_action('paste')
    nnoremap <silent><buffer><expr> rm
                \ defx#do_action('remove')
    nnoremap <silent><buffer><expr> nd
                \ defx#do_action('new_directory')
    nnoremap <silent><buffer><expr> nf
                \ defx#do_action('new_file')
    nnoremap <silent><buffer><expr> .
                \ defx#do_action('toggle_ignored_files')
endfunction

nnoremap ` :Defx -columns=git:indent:icon:filename -search=`expand('%:p')`<CR>

" Set gitgutter update frequency
set updatetime=100

set background=dark
set t_AF=^[[1;3%p1%dm
set t_AB=^[[4%p1%dm

set incsearch
set nohlsearch
set modelines=1
set nofoldenable
set nowrap
set nrformats=alpha,octal,hex
set number
set numberwidth=1
set ruler
set wildmenu
set backspace=indent,eol,start

syntax on
highlight Comment ctermfg=DarkBlue
highlight DiffAdd ctermfg=Gray ctermbg=Green
highlight DiffChange ctermfg=Gray ctermbg=Yellow
highlight DiffDelete ctermfg=Gray ctermbg=Red
highlight DiffText ctermfg=DarkGray ctermbg=Gray
highlight Incsearch ctermfg=White
highlight LineNr ctermfg=DarkGray
highlight Visual ctermfg=White
highlight javascriptImport ctermfg=Red
highlight javascriptExport ctermfg=Red


" highlight Directory ctermfg=Cyan
" highlight Constant ctermfg=Magenta
" highlight Special ctermfg=Red
" highlight PreProc ctermfg=Blue


autocmd StdinReadPre * let s:std_in=1
autocmd FileType yaml,html,css,javascript,ls,vue,typescript setlocal expandtab shiftwidth=2 softtabstop=2
autocmd FileType javascript setlocal filetype=javascript.jsx
autocmd FileType javascript.jsx setlocal autoindent
autocmd FileType pug,sass,styl setlocal expandtab shiftwidth=2 softtabstop=2
autocmd FileType json setlocal expandtab shiftwidth=2 softtabstop=2
autocmd FileType perl,java setlocal expandtab shiftwidth=4 softtabstop=4
autocmd FileType python setlocal expandtab shiftwidth=4 softtabstop=4 completeopt-=preview
autocmd FileType sh,make setlocal shiftwidth=4 tabstop=4
autocmd FileType c,cuda,cpp,cmake setlocal shiftwidth=4 tabstop=4 expandtab
autocmd FileType php setlocal shiftwidth=4 tabstop=4 expandtab
autocmd BufNewFile *.h setlocal shiftwidth=4 tabstop=4 expandtab

" au BufRead,BufNewFile *.asm set filetype=nasm tabstop=4 shiftwidth=4
" augroup filetype
"   au! BufRead,BufNewFile *.proto setfiletype proto
" augroup end

autocmd BufNewFile,BufEnter *.pbtxt setlocal filetype=pbtxt expandtab shiftwidth=2 softtabstop=2

autocmd BufNewFile,BufEnter *.vue setfiletype vue
autocmd FileType vue setlocal autoindent expandtab shiftwidth=2 softtabstop=2 commentstring=//\ %s comments=://
\ | syntax include @PUG syntax/pug.vim | unlet b:current_syntax
\ | syntax include @JS syntax/javascript.vim | unlet b:current_syntax
\ | syntax include @SASS syntax/sass.vim | unlet b:current_syntax
\ | syntax region vueTemplate matchgroup=vueTag start=/^<template.*>$/ end='</template>' contains=@PUG keepend
\ | syntax region vueScript matchgroup=vueTag start=/^<script.*>$/ end='</script>' contains=@JS keepend
\ | syntax region vueStyle matchgroup=vueTag start=/^<style.*>$/ end='</style>' contains=@SASS keepend
\ | syntax match htmlArg /v-text\|v-html\|v-if\|v-show\|v-else\|v-for\|v-on\|v-bind\|v-model\|v-pre\|v-cloak\|v-once/ contained
\ | syntax keyword htmlArg contained key ref slot
\ | syntax keyword htmlTagName contained component transition transition-group keep-alive slot
\ | syntax sync fromstart
highlight vueTag ctermfg=Blue

nnoremap <Tab> <C-W>w
nnoremap <C-W><C-W> <C-W>p
nnoremap + <C-W>+
nnoremap _ <C-W>-
nnoremap < <C-W><
nnoremap > <C-W>>
nnoremap <C-C> <C-A>
nnoremap <BS> :TagbarToggle<CR>
nnoremap :rr :RustRun
nnoremap :rt :RustTest
" leave terminal via ESC
tnoremap <Esc> <C-\><C-n>
xnoremap s :sort<CR>
